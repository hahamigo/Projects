/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

 * 
 */
public class Problem2 {
	public static void main(String[] args) {
//		int first_num = 1;
//		int second_num = 2;
//		int sum_of_even_terms = 2;
//		while (true) {
//			int next_num = first_num + second_num;
//			first_num = second_num;
//			second_num = next_num;
//			if (next_num >= 4000000) {
//				break;
//			} else {
//				if (next_num % 2 == 0) {
//					sum_of_even_terms += next_num;
//				}
//			}
//		}
//		System.out.println(sum_of_even_terms);
		for (int i = 0; i < 100; i++) {
			System.out.print(fib(i) + ", ");
		}
	}
	
	public static int fib(int n) {
		if (n == 0 || n == 1) {
			return 1;
		}
		return fib(n - 1) + fib(n - 2);
	}
}
